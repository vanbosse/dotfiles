#!/bin/bash

# Shell options, environment variables and readline settings
# =============================================================================

# Paths and binaries
# -----------------------------------------------------------------------------

# List the directories we want to add to the PATH variable, if they exist.
paths_to_add=(
    # Private "bin"
    "$HOME/bin"
    # Homebrew, Rudix (and various other distributions and local installations)
    /usr/local/{,s}bin
    # MacPorts
    /opt/local/{,s}bin
    # Composer
    "$HOME/.composer/vendor/bin"
    # System
    /{,s}bin
    /usr/{,s}bin
    # X binaries
    /usr/X11/bin
);

# Create an array of directories currently in the PATH variable.
oldIFS="$IFS";
IFS=:;
set -- $PATH;
IFS="$oldIFS";
unset oldIFS;
old_paths=("$@");

# Construct an array of the directories in the new PATH, preferring our paths
# to the predefined ones.
new_paths=();
for path_to_add in "${paths_to_add[@]}"; do
    [ -d "$path_to_add" ] && new_paths+=("$path_to_add");
done;
for old_path in "${old_paths[@]}"; do
    [ -d "$old_path" ] || continue;
    for new_path in "${new_paths[@]}"; do
        [ "${old_path%%/}" = "${new_path%%/}" ] && continue 2;
    done;
    new_paths+=("$old_path");
done;

# Now implode everything into the new PATH variable.
printf -v PATH "%s:" "${new_paths[@]}";
export PATH="${PATH%:}";
unset {old,new}_path{,s} path{s,}_to_add;

# Override MacPorts' SSH binaries.
for binary in /usr/bin/ssh*; do
    [ -x "$binary" ] && hash -p "$binary" "$(basename "$binary")";
done;
unset binary;

# Prefer Homebrew's netcat
[ -x /usr/local/bin/netcat ] && hash -p /usr/local/bin/netcat nc;

# Globbing and completion
# -----------------------------------------------------------------------------

# Case-insensitive globbing.
shopt -s nocaseglob;

# Do not autocomplete when accidentally pressing Tab on an empty line. (It takes
# forever and yields "Display all 15 gazillion possibilites?")
shopt -s no_empty_cmd_completion;

# Do not overwrite files when redirecting using ">".
# Note that you can still override this with ">|".
set -o noclobber;

# Prefer the Queen's English and use UTF-8.
export LC_ALL='en_GB.UTF-8';
export LANG='en_GB';

# History
# -----------------------------------------------------------------------------

# When the command contains an invalid history operation (for instance when
# using an unescaped "!" (I get that a lot in quick e-mails and commit
# messages) or a failed substitution (e.g. "^foo^bar" when there was no "foo"
# in the previous command line), do not throw away the command line, but let me
# correct it.
shopt -s histreedit;

# Keep a reasonably long history.
export HISTSIZE=4096;

# Keep even more history lines inside the file, so we can still look up
# previous commands without needlessly cluttering the current shell's history.
export HISTFILESIZE=16384;

# When executing the same command twice or more in a row, only store it once.
export HISTCONTROL=ignoredups;

# Keep track of the time the commands were executed.
# The xterm colour escapes require special care when piping; e.g. "| less -R".
export HISTTIMEFORMAT=$'\e[1;30m%Y/%m/%d %H:%M:%S\e[0m  ';

# ANSI colours and font properties for xterm
# -----------------------------------------------------------------------------

# See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html
# Using "tput" would be more portable, but this is slightly faster. I used to
# use "tput setaf 1" etc., so maybe I will change it back some day.
let i=0;
for color in BLACK RED GREEN YELLOW BLUE MAGENTA CYAN WHITE '' DEFAULT; do
	if [ -n "$color" ]; then
		printf -v "FG_$color" $'\e[%dm' $((30 + $i));
		printf -v "BG_$color" $'\e[%dm' $((40 + $i));
	fi;
	let i++;
done;
let i=0;
for style in RESET BOLD '' '' UNDERLINE BLINK '' REVERSE HIDDEN; do
	if [ -n "$style" ]; then
		printf -v "FONT_$style" $'\e[%dm' $i;
		[ "$style" != 'RESET' ] && printf -v "FONT_NOT_$style" $'\e[%dm' $(($i + 20));
	fi;
	let i++;
done;
unset i color style;

# "Not bold" is not \e[21m, but \e[22m. ("2" means "faint" on some terminals.)
export FONT_NOT_BOLD=$'\e[22m';

# Reset the font style, but not the color. (Unlike $FONT_RESET.)
export FONT_NORMAL="${FONT_NOT_BOLD}${FONT_NOT_UNDERLINE}${FONT_NOT_BLINK}${FONT_NOT_REVERSE}${FONT_NOT_HIDDEN}";

# Add some color to ls.
export CLICOLOR=1
